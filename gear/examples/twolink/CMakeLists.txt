message(STATUS "adding examples/twolink...")

# find OpenGL and GLUT
if( WIN32 )
    find_package(OpenGL REQUIRED)
    set(GLUT_FOUND 1)
    if( CMAKE_SIZEOF_VOID_P EQUAL 8 ) # 64 bit
        set(GLUT_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../3rdparty/freeglut/include")
        set(GLUT_LIBRARY_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../3rdparty/freeglut/lib/x64")
        set(GLUT_LIBRARIES "freeglut.lib")
        file(GLOB GLUT_DLL "${CMAKE_CURRENT_SOURCE_DIR}/../3rdparty/freeglut/bin/x64/freeglut.dll")
    else() # 32 bit
        set(GLUT_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../3rdparty/freeglut/include")
        set(GLUT_LIBRARY_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../3rdparty/freeglut/lib")
        set(GLUT_LIBRARIES "freeglut.lib")
        file(GLOB GLUT_DLL "${CMAKE_CURRENT_SOURCE_DIR}/../3rdparty/freeglut/bin/freeglut.dll")
    endif()
elseif( APPLE )
    INCLUDE_DIRECTORIES ( /System/Library/Frameworks )
    FIND_LIBRARY(COCOA_LIBRARY Cocoa)
    FIND_LIBRARY(GLUT_LIBRARY GLUT )
    FIND_LIBRARY(OpenGL_LIBRARY OpenGL )
    MARK_AS_ADVANCED (COCOA_LIBRARY GLUT_LIBRARY OpenGL_LIBRARY)
    SET(EXTRA_LIBS ${COCOA_LIBRARY} ${GLUT_LIBRARY} ${OpenGL_LIBRARY})
else()
    find_package(OpenGL REQUIRED)
    find_package(GLUT REQUIRED)
endif()

# twolink
file(GLOB twolink_SRC "*.cpp" "*.h")
include_directories(${OPENGL_INCLUDE_DIR} ${GLUT_INCLUDE_DIR})
link_directories(${OPENGL_LIBRARY_DIR} ${GLUT_LIBRARY_DIR})
add_executable(twolink ${twolink_SRC})
if( WIN32 )
    target_link_libraries(twolink GEAR ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES})
elseif ( APPLE )
    target_link_libraries(twolink GEAR ${EXTRA_LIBS})
else()
    target_link_libraries(twolink GEAR ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES})
endif()

